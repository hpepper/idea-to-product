<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE ideatoproduct SYSTEM "ideatoproduct.dtd">

<!--  Documentation -->

<ideatoproduct Version="0.6.1">

<!-- Should I have an idea-bank page that holds the differen ideas, who came up with the, who works on them etc. -->
<!-- Mainly based on The Myths of Innovation (Scott Berkun) -->
<Idea Id="" Name="">
  <!-- Triage level can be: C=Critical, V=Value-adding, N=Nice-to-have -->
  <TriageLevel></TriageLevel>
  <!-- Order-level the idea should be listed in. -->
  <SortOrder></SortOrder>
  <!-- Idea status: Captured, Dropped, Chartered(an initial or full charter has been created.) Stewing(There is a better work for the breweing/cultivation of the idea)Nurture? -->
  <IdeaStatus></IdeaStatus>
  <Headline></Headline>
  <Description></Description>
  <Purpose></Purpose>
  <ProblemThatIsSolved></ProblemThatIsSolved>
  <WhosProblemIsIt></WhosProblemIsIt>
  <IsItImportantToThem></IsItImportantToThem>
  <WhatIndicatesTheyWillPayForTheSolution></WhatIndicatesTheyWillPayForTheSolution>
  <!-- There can be multiple technical challenges. -->
  <ThoughChallenge Id="" Challenge="">
    <!-- A challenge can have multiple solutions. -->
    <Solution></Solution>
  </ThoughChallenge>
   <!-- Do you have a prototype, sample or demonstration aka. PoC. -->
  <ProofOfConcept></ProofOfConcept>
  <HardestRemainingWork></HardestRemainingWork>
  <WhyHasNoOneDoneThisBefore></WhyHasNoOneDoneThisBefore>
  <WhyAreYouTheRightPersonToSolveIt></WhyAreYouTheRightPersonToSolveIt>
  <WhyShouldOurOrgFundYourWork></WhyShouldOurOrgFundYourWork>
</Idea>


<!-- TODO For 'Diagram' the @startuml and @enduml are added by the itp2doc.pl -->

<!--
  <IdeaChallenge Id="" Description="">
  <IdeaChallengeSolution Id="" Description="">
-->

<!-- Described in SixSigmaDmadvDefine. -->
<Sipoc Id="" Headline="">
  <Description></Description>
  <Supplier></Supplier>
  <Input></Input>
  <!-- content of 'value' can be VA(ValueAdding) or NVA(Non-value-adding). -->
  <Step Order="" Value=""></Step>
  <Output></Output>
  <Customer></Customer>
</Sipoc>



<InitialCharter Id="" ProposalName="">
  <!-- an initial charter can have multiple related sipocs. -->
  <ReleatedSipocId></ReleatedSipocId>
  <OpporttunityStatment>
    <CurrentState></CurrentState>
    <WhatHasChanged></WhatHasChanged>
    <WhatCouldTheConcequencesBe></WhatCouldTheConcequencesBe>
    <ConsequencesIfNotChanged></ConsequencesIfNotChanged>
    <DesiredState></DesiredState>
    <When></When>
    <GainAtDesiredState></GainAtDesiredState>
  </OpporttunityStatment>
  <ExternalProductDependency ProductName="" Dependency=""></ExternalProductDependency>
  <TechnologyNeed></TechnologyNeed>
  <KnowledgeNeed></KnowledgeNeed>
  <!-- three to five; See SixSigmaObjectives for information. -->
  <KeyObjective></KeyObjective>
  <KeyObjective></KeyObjective>
  <KeyObjective></KeyObjective>
  <Motive></Motive>
  <InitialMarketSegment></InitialMarketSegment>
  <WhatIsBeingChangedOrProduced></WhatIsBeingChangedOrProduced>
  <MissionStatment>
    <ForTargetCustomers></ForTargetCustomers>
    <WhoStatementOfNeedOrOpportunity></WhoStatementOfNeedOrOpportunity>
    <TheProductName></TheProductName>
    <IsAProductCategory></IsAProductCategory>
    <ThatKeyBenefitCompellingReassonToBuyUse></ThatKeyBenefitCompellingReassonToBuyUse>
    <UnlikePrimaryCompetitiveAltenativeOrCurrentSystemOrProcess></UnlikePrimaryCompetitiveAltenativeOrCurrentSystemOrProcess>
    <OurProductPrimaryDiffAndAdvantageOfNewProduct></OurProductPrimaryDiffAndAdvantageOfNewProduct>
  </MissionStatment>
</InitialCharter>


<Charter Id="" Name="">
  <InitialCharterId></InitialCharterId>
  <BusinessUnit></BusinessUnit>
  <ProjectOwner></ProjectOwner>
  <ProjectTypeId></ProjectTypeId>
  <ProductHeadline></ProductHeadline>
  <Process></Process>
  <CurrentState></CurrentState>
  <ObjectiveBeingAffected></ObjectiveBeingAffected>
  <MeasurableEffect></MeasurableEffect>
  <DesiredState></DesiredState>
  <GainAtDesiredState></GainAtDesiredState>
  <PitchFiveSeconds></PitchFiveSeconds>
  <!-- Is the 30s pitch the same as the OpporttunityStatment from the InitialCharter? -->
  <PitchThirtySeconds></PitchThirtySeconds>
  <PitchFiveMinutes></PitchFiveMinutes>
  <KeyFeature></KeyFeature>
  <ProjectScope>
    <ContextModelId></ContextModelId>
    <InScope></InScope>
    <OutOfScope></OutOfScope>
  </ProjectScope>
  <ProjectObjectives>
    <Action></Action>
    <CardinalObjective></CardinalObjective>
    <ProjectSubject></ProjectSubject>
    <MarketSegment></MarketSegment>
    <Direction></Direction>
    <Measure></Measure>
    <Target></Target>
    <Deadline></Deadline>
  </ProjectObjectives>
  <RolledThroughputYieldGoal></RolledThroughputYieldGoal>
  <RolledThroughputYieldMaximum></RolledThroughputYieldMaximum>
  <RtyProcess Name="">
    <QuantityIn></QuantityIn>
    <QuantityScrapped></QuantityScrapped>
    <QuantityReworked></QuantityReworked>
    <CostOfScrappedPerUnit></CostOfScrappedPerUnit>
    <CostOfReworkedPerUnit></CostOfReworkedPerUnit>
    <CycleTimeMinutes></CycleTimeMinutes>
    <!-- Could C-P be the ammount of time it has run; wich would produce QuantityOut/(RunTime/CycleTime) -->
    <!-- Since this is a KanBan kind of thing then the C-P would be ? Runtime might be 1/23 higher? -->
  </RtyProcess>
  <ImpactOnOtherBusinessUnits></ImpactOnOtherBusinessUnits>
  <SupportRequired></SupportRequired>
  <!-- the following data is entered by the quants. -->
  <NetPresentValue></NetPresentValue>
  <!-- IRR ? -->
  <Status></Status>
</Charter>

<!-- Project hopper. Information extracted from the charter:
  NPV, Project type, Project owner, Project champion, Start date, completion date, mission statement. -->

<ProjectHopper Id="" Name="">
  <!-- ther can be multiple charterid references. -->
  <CharterId></CharterId>
</ProjectHopper>

<Product Id="" Name="">
  <Description></Description>
  <InitialVision></InitialVision>
  <MissionStatement></MissionStatement>
</Product>

<ObjectiveType Id="" Name="">
  <Description></Description>
</ObjectiveType>

<ObjectiveTypeLUT Id="">
  <ObjectiveId></ObjectiveId>
  <ObjectiveTypeId></ObjectiveTypeId>
</ObjectiveTypeLUT>

<KeyIndicators Id="" HeadLine="">
  <Description></Description>
  <Type></Type>
  <State></State>
  <Priority></Priority>
  <Comment></Comment>
</KeyIndicators>

<KeyIndicatorType Id="" Name="">
  <Description></Description>
</KeyIndicatorType>

<BusinessCase Id="">
  <ProjectId></ProjectId>
  <ExecutiveSummary></ExecutiveSummary>
  <CompanyOverview></CompanyOverview>
  <BusinessEnvironment></BusinessEnvironment>
  <CompanyDescription></CompanyDescription>
  <State></State>
  <Comment></Comment>
</BusinessCase>

<Project Id="" Name="">
  <ProductId></ProductId>
  <CharterId></CharterId>
  <ParentId></ParentId>
  <ProjectTypeId></ProjectTypeId>
  <Description></Description>
</Project>

<ProjectType Id="1" Type="Blitz">
  <Description></Description>
</ProjectType>

<SoftwareArchitectureDocumentation Id="1" Title="SW Arcitechture Documentation for ITP">
  <Issue>0.1.0</Issue>
  <Revision>0.1.0</Revision>
  <Draft>1</Draft>
  <Status></Status>
  <ReleaseDate>2017-09-14</ReleaseDate>
  <Author>Authors</Author>
  <SourceReference></SourceReference>
  <DistributionFolder></DistributionFolder>
  <DistributionDirectName></DistributionDirectName>
  <IssuingOrganization></IssuingOrganization>
  <Summary></Summary>
  <!-- This is the BusinessOpportunity of the charter. -->
  <Background></Background>
  <ContextModelId></ContextModelId>
  <WhatWillNotBeDone>TBD</WhatWillNotBeDone>
  <!-- Deploying the product. -->
  <PrototypeDeployment></PrototypeDeployment>
  <ProductionDeployment></ProductionDeployment>
  <PlannedUpgrades></PlannedUpgrades>
  <IntendedOperationalLife></IntendedOperationalLife>
  <PhysicalEntities></PhysicalEntities>
  <FaqId></FaqId>

<!-- this goes into the: Rationale, Background, and Design Constraints -->
  <SipocId></SipocId>

<!-- this goes into ? -->
  <ModuleDecompositionViewPacketId Order="1"></ModuleDecompositionViewPacketId>
  <ModuleUsesViewPacketId Order="1"></ModuleUsesViewPacketId>
  <ModuleGeneralizationViewPacketId Order="1"></ModuleGeneralizationViewPacketId>
  <ModuleLayeredViewPacketId Order="1"></ModuleLayeredViewPacketId>
  <CnCClientServerProcessesViewPacketId Order="1"></CnCClientServerProcessesViewPacketId>
  <CnCCommunicatingProcessesViewPacketId Order="1"></CnCCommunicatingProcessesViewPacketId>
  <CnCPeerToPeerProcessesViewPacketId Order="1"></CnCPeerToPeerProcessesViewPacketId>
  <CnCPipeAndFilterViewPacketId Order="1"></CnCPipeAndFilterViewPacketId>
  <CnCPublishSubscribeProcessesViewPacketId Order="1"></CnCPublishSubscribeProcessesViewPacketId>
  <CnCSharedDataViewPacketId Order="1"></CnCSharedDataViewPacketId>
  <AllocationDeploymentViewPacketId Order="1"></AllocationDeploymentViewPacketId>
  <AllocationImplementationViewPacketId Order="1"></AllocationImplementationViewPacketId>
  <AllocationWorkAssignmentViewPacketId Order="1"></AllocationWorkAssignmentViewPacketId>
</SoftwareArchitectureDocumentation>

<ViewPacket Id="">
  <Title></Title>
  <!-- Types:
     Module - the system as units of implementation
     C&C(Component-and-Connector) - the system as units of runtime execution
     Allocation - the mapping from software elements to environmental structures.
    -->
  <ViewPacketType></ViewPacketType>
  <ViewPacketStyle></ViewPacketStyle>
  <Introduction></Introduction>
  <ComponentId></ComponentId>
  <!--  have a related view list. -->
  <!--  TODO V calculate parent view packets. -->
  <!--  TODO V Calculate siblings? -->
  <!--  TODO V calculate children. -->
</ViewPacket>

<!--
   Types:
     Module - the system as units of implementation
     CnC(Component-and-Connector) - the system as units of runtime execution
     Allocation - the mapping from software elements to environmental structures.
     Sub - sub packets, which are included in on of the other view packet.
   Styles:
     Sub:ContextModel:

   ComponentRecurseLevel: Sets a limit to how deep the displayed figure will go, in e.g. decomposition views.
      SharedData usually has a level a 1.
   ComponentId: The ID of the primary component.
   ContextModelId: The ViewPacketId the holds the Context model information.
   ParentViewPacketId:
   ChildViewPacketId*: Can be zero or more entries, that are tightly related to this view.
    -->
<!-- ViewpacketTemplate
<ViewPacket Id="">
  <Title></Title>
  <ViewPacketType></ViewPacketType>
  <ViewPacketStyle></ViewPacketStyle>
  <ComponentRecurseLevel></ComponentRecurseLevel>
  <Introduction></Introduction>
  <ComponentId></ComponentId>
  <ContextModelId></ContextModelId>
  <DiagramId></DiagramId>
  <ParentViewPacketId></ParentViewPacketId>
  <ChildViewPacketId></ChildViewPacketId>
  <SiblingViewPacketId></SiblingViewPacketId>
</ViewPacket>
-->

<Component Id="" Name="">
  <Summary></Summary>
  <Responsibilities></Responsibilities>
  <VisibilityOfInterfaces></VisibilityOfInterfaces>
  <License></License>
  <SourceRepository></SourceRepository>
  <ArtifactRepository></ArtifactRepository>
  <File></File>
  <BuildCycle></BuildCycle>
  <Contact></Contact>
  <TestInformation></TestInformation>
  <ImplementationConstraints></ImplementationConstraints>
  <Performance></Performance>
  <Capacity></Capacity>
  <Reliability></Reliability>
  <ResourceRequirement></ResourceRequirement>
  <Functionality></Functionality>
  <Security></Security>
  <SchedulerPriority></SchedulerPriority>
</Component>


<!-- Cle02,p29 - Module view type. -->
<!-- The component information is read by: GetComponentInformation() in itp2doc.pl -->
<!--
    Summary: Used in legend list, and in the detailed description of the Viewpacket.
         TODO V could summary benefit from being formulated partly as a 'StoryCard'?
    Responsibilities: Used in the detailed description of the Viewpacket.
    BehaviorDescription: Used in the view template 'Element Behavior' verbatim.
         - Describe an overview of what this component does.
    VisibilityOfInterfaces:
    Interface: Describe what interfaces the component has, like paramters and return values.

  Allocation/Implementation style:
    SourceRepository: Where is the source stored.
    ArtifactRepository: Where will the produced/artifact files be stored.
    Files: the files that it consists of. (TODO N should this be 'File*' ?)
    BuildCycle: nightly, weekly, and so on, that it subscribes to
    Contact: contact information for the team member responsible for providing this.
   *Team: Can be internal team, contractor or vendor, possibly use pre-tags like: i-/c-/v-
TODO V License information should also be part of the information. Licens per component, then the Contact would probably be an indication of whom to contact?

    TestInformation:
    ImplementationConstraints:
    Performance:
    Capacity:
    Reliability:
    ResourceRequirement:
    Security:
    SchedulerPriority:
TODO C Provide an in depth description that will be provided in the viewpacket for this component.
  -->
<!-- ComponentTemplate
<Component Id="" Name="">
  <Summary></Summary>
  <Responsibilities></Responsibilities>
  <BehaviorDescription></BehaviorDescription>
  <VisibilityOfInterfaces></VisibilityOfInterfaces>
  <Interface></Interface>
  <License></License>
  <SourceRepository></SourceRepository>
  <ArtifactRepository></ArtifactRepository>
  <File></File>
  <BuildCycle></BuildCycle>
  <Contact></Contact>
  <TestInformation></TestInformation>
  <ImplementationConstraints></ImplementationConstraints>
  <Performance></Performance>
  <Capacity></Capacity>
  <Reliability></Reliability>
  <ResourceRequirement></ResourceRequirement>
  <Functionality></Functionality>
  <Security></Security>
  <SchedulerPriority></SchedulerPriority>
</Component>
-->

 <!-- The Module relation type can be:
        is-part-of: (decomposition) relation defines a part/whole relationship between the submodule A - the part, or child and the aggregate module B - the whole, or parent.
	depends-on: (uses) relation defines a dependency relationship between A and B. Specific module styles elaborate what dependency is meant.
	is-a: (generalization) relation defines a generalization relationship between a more specific module - the child A - and a more general module - the parent B.
            : layers
    -->


<ComponentRelation Id="">
  <ComponentAId></ComponentAId>
  <ComponentBId></ComponentBId>
  <Style></Style>
</ComponentRelation>


<!-- ComponentRelationTemplate
  ComponentAId: Component ID of the central module, the store (the work)
               It is done this way to be able to support the same logic as module-uses, where it is possible to
               search for all ComponentAId to see which connections that module id has.
  ComponentBId: The satelite of entity connecting to the store.
  Style: the Style: shared-data, communicating-proccesses, etc.
  PropertiesOfRelation: RO(Read only), WO(Write Only), RW(Read-Write).
  ConnectorId: Id to the Connector structure, which in turn describes the connector itselv
                  Multiple Component can share the same Connector description, e.g. TCP.

<ComponentRelation Id="">
  <ComponentAId></ComponentAId>
  <ComponentBId></ComponentBId>
  <Style></Style>
  <PropertiesOfRelation></PropertiesOfRelation>
  <RelationType></RelationType>
  <ComponentId></ComponentId>
  <ComponentType></ComponentType>
  <ComponentPort Type=""></ComponentPort>
  <ConnectorId></ConnectorId>
</ComponentRelation>
-->



<StoryCard Id="" HeadLine="">
  <ProjectId></ProjectId>
  <Description></Description>
  <State></State>
  <Priority></Priority>
  <Comment></Comment>
  <ParentId></ParentId>
  <StatementOfWork></StatementOfWork>
</StoryCard>

<Dictionary Id="" Word="">
  <DocumentGroupId></DocumentGroupId>
  <DictionaryDescription StakeHolderId="">
    <Description></Description>
  </DictionaryDescription>
</Dictionary>

<Design Id="" Headline="">
  <Description></Description>
  <DesignOption Id="" Headline="">
    <Order></Order>
    <Description></Description>
    <OptionEvaluation Id="" Type="">
      <Description></Description>
      <Rating></Rating>
    </OptionEvaluation>
  </DesignOption>
  <SelectedOptionId></SelectedOptionId>
  <SelectionReasoning></SelectionReasoning>
</Design>

<History Id="" Name="">
  <PId></PId>
  <Date></Date>
  <Description></Description>
</History>

<Requirement Id="" Headline="">
  <uuid></uuid>
  <Group></Group>
  <Who></Who>
  <What></What>
  <When></When>
  <Where></Where>
  <Constraint></Constraint>
  <Comment></Comment>
  <SourceRequirement></SourceRequirement>
  <RelatedUseCase></RelatedUseCase>
  <Status></Status>
  <Owner></Owner>
</Requirement>

<TestCase Id="" Name="">
  <Purpose></Purpose>
  <PreConditions></PreConditions>
  <ScenarioId></ScenarioId>
  <PostConditions></PostConditions>
  <Notes></Notes>
</TestCase>

<AcceptanceTest Id="" Name="">
  <LinkTypeId></LinkTypeId>
  <LinkId></LinkId>
  <Description></Description>
</AcceptanceTest>

<Activity Id="" Name="">
  <Description></Description>
</Activity>

<CustomerPriority Id="" Name="">
  <Description></Description>
</CustomerPriority>

<DependencyLookUpTable Id="" Name="">
  <DependentTypeIdLeft></DependentTypeIdLeft>
  <DependentIdLeft></DependentIdLeft>
  <DependentTypeIdRight></DependentTypeIdRight>
  <DependentIdRight></DependentIdRight>
</DependencyLookUpTable>

<DependencyType Id="" Name="">
  <Description></Description>
</DependencyType>

<ReqStatus Id="" Name="">
  <Description></Description>
</ReqStatus>

<Risk Id="" Name="">
  <Description></Description>
</Risk>

<UseCase Id="" Name="">
  <LinkTypeId></LinkTypeId>
  <LinkId></LinkId>
  <Description></Description>
  <!-- there can be multiple entries of the RelatedRequirementId -->
  <RelatedRequirementId></RelatedRequirementId>
  <PreConditions></PreConditions>
  <GoalInContext></GoalInContext>
  <SuccessfulEndConditions></SuccessfulEndConditions>
  <FailedEndConditions></FailedEndConditions>
  <PrimaryActors></PrimaryActors>
  <SecondaryActors></SecondaryActors>
  <Trigger></Trigger>
  <FrequencyOfUse></FrequencyOfUse>
  <MainFlowId></MainFlowId>
  <ExceptionFlowIdentifier></ExceptionFlowIdentifier>
  <Priority></Priority>
  <SpecialRequirements></SpecialRequirements>
  <Assumptions></Assumptions>
  <Notes></Notes>
  <OpenIssues></OpenIssues>
</UseCase>

<!-- Support include, and the other, was that extend? -->
<UseCaseEntry Id="" Description="">
  <UseCaseFlowId></UseCaseFlowId>
  <StoryCardId></StoryCardId>
  <Order></Order>
  <SubUseCaseId></SubUseCaseId>
</UseCaseEntry>

<UseCaseExceptionEntry Id="" Description="">
  <ExceptionFlowId></ExceptionFlowId>
  <UseCaseId></UseCaseId>
  <StoryCardId></StoryCardId>
  <Order></Order>
  <SubUseCaseId></SubUseCaseId>
</UseCaseExceptionEntry>

<Documentation Id="" Name="">
  <StakeholderId></StakeholderId>
  <DocumentGroupId></DocumentGroupId>
  <Order></Order>
  <Content></Content>
</Documentation>

<Work Id="" Name="">
  <LinkTypeId></LinkTypeId>
  <LinkId></LinkId>
  <Order></Order>
  <Estimate></Estimate>
  <TimeUnit></TimeUnit>
  <UnLoaded></UnLoaded>
</Work>

<ProcessChart Id="" Name="">
  <ProcessChartType></ProcessChartType>
  <Description></Description>
</ProcessChart>

<Object Id="" Name="">
  <Attributes></Attributes>
  <Operations></Operations>
  <ObjectToObject></ObjectToObject>
</Object>

<ObjectLink Id="">
  <LeftLinkType></LeftLinkType>
  <LeftLinkId></LeftLinkId>
  <RightLinkType></RightLinkType>
  <RightLinkId></RightLinkId>
  <StreamDirective></StreamDirective>
</ObjectLink>

<ObjectToObjectLUT Id="">
  <fromobjectId></fromobjectId>
  <toobjectId></toobjectId>
</ObjectToObjectLUT>

<ObjectClass Id="" Name="">
  <Description></Description>
</ObjectClass>

<LinkType Id="" Name="">
  <Description></Description>
</LinkType>

<DocumentStructure Id="" Name="">
  <Description></Description>
  <DocumentSubGroupId></DocumentSubGroupId>
</DocumentStructure>

<DocumentPart Id="" Name="">
  <Order></Order>
  <Description></Description>
  <DocumentGroupId></DocumentGroupId>
  <DocumentSubGroupId></DocumentSubGroupId>
</DocumentPart>

<DocumentGroupName Id="" GroupName="">
  <Description></Description>
</DocumentGroupName>


</ideatoproduct>
